#include <iostream>
#include <vector>
using namespace std;

// Structure representing a task
struct Task{
    string description;
    bool completed;
};

// Vector to store the tasks
vector<Task>tasks;

// Function to add a new task to the list
void addTask(string description){
    Task newTask;
    newTask.description = description;
    newTask.completed = false;
    tasks.push_back(newTask);
    cout << "Task added successfully!";
}

// Function to view all the tasks in the list
void viewTasks() {
    if(tasks.empty()){
        cout<<"Your To-Do List is empty!";
    }
    else{
        cout<<"Tasks:\n";
        for(int i = 0; i < tasks.size(); i++){
            cout << i+1 << ".";
            if(tasks[i].completed){
                cout<<"[X]";
            }
            else{
                cout<<"[]";
            }
            cout << tasks[i].description << "\n";
        }
    }
}

// Function to remove a task from the list
void removeTask (int taskIndex) {
    if(taskIndex>=1 && taskIndex<=tasks.size()){
        tasks.erase(tasks.begin() + taskIndex - 1);
        cout<<"Task removed successfully.";
    }
    else{
        cout<<"Invalid task index";
    }
}

// Function to mark a task as completed
void markTask(int taskIndex){
    if(taskIndex >= 1 && taskIndex <= tasks.size()){
        tasks[taskIndex-1].completed = true;
        cout << "Task marked as completed.\n";
    }
    else{
        cout<<"Invalid task index.\n";
    }
}
int main() {
    cout << "Welcome to your To-Do List Manager!";
    int choice;
    string description;
    while (true){
        cout <<"\nEnter your choice:"
              "\n1.Add a task"
              "\n2.View your tasks"
              "\n3.Remove a task"
              "\n4.Mark task as completed"
              "\n5.Exit";
        cin >> choice;
        switch (choice) {
            case 1:
                cout << "Please enter your task: ";
                cin.ignore();
                getline(cin,description);
                addTask(description);
                break;
            case 2:
                viewTasks();
                break;
            case 3:
                int task;
                cout<<"Which task would you like to remove? ";
                cin>>task;
                removeTask(task);
                break;
            case 4:
                int taskIndex;
                cout<<"Good job!Which task have have you completed? ";
                cin>>taskIndex;
                markTask(taskIndex);
                break;
            case 5:
                cout<<"Exiting...Goodbye!";
                return 0;
            default:
                cout<<"Invalid input.Please try again.";
                break;
        }
    }
}
